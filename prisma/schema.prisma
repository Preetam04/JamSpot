// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid()) 
  email         String   @unique
  name          String?
  password      String?
  provider      Provider
  streams      Stream[] @relation("user")
  upvotes       Upvote[]
  addedStreams  Stream[] @relation("addedBy")
  hostedSpaces  Space[]  @relation("hostedBy")
}

model Space {
  id                String         @id @default(uuid()) 
  name              String  
  streams           Stream[]       @relation("spaceStreams") 
  hostId            String
  host              User           @relation("hostedBy", fields: [hostId], references: [id])
  isActive          Boolean        @default(true)
  // currentStream CurrentStream?
  
}

model Stream {
  id String @id @default(uuid())
  type StreamType
  url String
  thumbnail String  @default("")
  active  Boolean @default(true)
  title String
  played  Boolean @default(false)
  userId        String
  user          User           @relation(fields: [userId], references: [id], name: "user")
  
  addedBy String
  addedByUser User @relation("addedBy", fields: [addedBy], references: [id])
  upvotes Upvote[]

  spaceId       String?
  space         Space?         @relation("spaceStreams", fields: [spaceId], references: [id], onDelete: Cascade)

}


model Upvote {
  id           String   @id @default(uuid()) 
  streamId   String
  userId    String
  user    User  @relation(fields: [userId], references: [id])
  stream   Stream @relation(fields: [streamId], references: [id])

  @@unique([userId, streamId])
}

enum StreamType {
  Spotify
  Youtube
}


enum Provider {
  Google
  Credentials
}

enum Role {
  Streamer
  EndUser
}